{"ast":null,"code":"var _jsxFileName = \"/Users/hackyourfuture/Desktop/POST_GRAD/API_postgrad/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { Divider } from 'semantic-ui-react';\n\nconst Index = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, __jsx(Divider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, \"FILMS\")), __jsx(Divider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, props.films.map(film => __jsx(\"li\", {\n  key: film.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, __jsx(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 11\n  }\n}, film.title), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 11\n  }\n}, \"Release Date: \", film.release_date), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 11\n  }\n}, \"Score: \", film.rt_score), __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${film.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 11\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }\n}, \"More Info\")))))));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://ghibliapi.herokuapp.com/films');\n  const data = await res.json();\n  console.log(data);\n  return {\n    films: data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/hackyourfuture/Desktop/POST_GRAD/API_postgrad/pages/index.js"],"names":["Layout","Link","fetch","Divider","Index","props","films","map","film","id","title","release_date","rt_score","getInitialProps","res","data","json","console","log"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADA,CADF,EAIE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAEnB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKD,IAAI,CAACE,KAAV,CADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmBF,IAAI,CAACG,YAAxB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAYH,IAAI,CAAEI,QAAlB,CAJF,EAKE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKJ,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CALF,CAFD,CADH,CADA,CAJF,CADF;;AAyBAL,KAAK,CAACS,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAC,uCAAD,CAAvB;AACA,QAAMa,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAO;AACLT,IAAAA,KAAK,EAAES;AADF,GAAP;AAGD,CARD;;AAUA,eAAeX,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { Divider } from 'semantic-ui-react'\n\nconst Index = props => (\n  <Layout>\n    <Divider >\n    <h1>FILMS</h1>\n    </Divider>\n    <Divider >\n    <ul>\n      {props.films.map(film => (\n\n        <li key={film.id}>\n          <h2>{film.title}</h2>\n    \n          <p>Release Date: { film.release_date}</p>\n          <p>Score: { film. rt_score}</p>\n          <Link href=\"/p/[id]\" as={`/p/${film.id}`}>\n            <a>More Info</a>\n          </Link>\n        </li>\n        \n      ))}\n    </ul>\n    </Divider>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://ghibliapi.herokuapp.com/films');\n  const data = await res.json();\n  console.log(data);\n\n  return {\n    films: data\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}