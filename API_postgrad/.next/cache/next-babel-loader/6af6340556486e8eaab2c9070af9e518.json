{"ast":null,"code":"var _jsxFileName = \"/Users/hackyourfuture/Desktop/next-learn-demo/6-fetching-data/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport Search from '../../components/Search';\nconst locations1 = [\"S\", \"Ams\", \"Gro\", \"F\", \"T\", \"Lixe\", \"San\", \"Amstel\"]; //console.log(props.locations.name);\n\nconst Film = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, props.film.title), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }\n}, props.film.description), __jsx(Search, {\n  locations: locations1,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}), __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, \"LOCATIONS\"), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, props.locations.map(location => __jsx(\"li\", {\n  key: location.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }\n}, __jsx(Link, {\n  href: \"/l/[id]\",\n  as: `/l/${location.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 11\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }\n}, \"Location: \", location.name))))));\n\nFilm.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://ghibliapi.herokuapp.com/films/${id}`);\n  const film = await res.json();\n  const res2 = await fetch(film.locations);\n  const locations = await res2.json();\n  console.log(Array.from('foo'));\n  let locationsNames = locations.map(item => item.name); //console.log(`Fetched show: ${film.people}`);\n\n  console.log(locationsNames);\n  return {\n    film,\n    locations,\n    locationsNames\n  };\n};\n\nexport default Film;","map":{"version":3,"sources":["/Users/hackyourfuture/Desktop/next-learn-demo/6-fetching-data/pages/p/[id].js"],"names":["Layout","fetch","Link","Search","locations1","Film","props","film","title","description","locations","map","location","id","name","getInitialProps","context","query","res","json","res2","console","log","Array","from","locationsNames","item"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,MAAMC,UAAU,GAAG,CACjB,GADiB,EAEjB,KAFiB,EAGjB,KAHiB,EAIjB,GAJiB,EAKjB,GALiB,EAMjB,MANiB,EAOjB,KAPiB,EAQjB,QARiB,CAAnB,C,CAUA;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,IAAN,CAAWC,KAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIF,KAAK,CAACC,IAAN,CAAWE,WAAf,CAFF,EAGE,MAAC,MAAD;AAAQ,EAAA,SAAS,EAAEL,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGE,KAAK,CAACI,SAAN,CAAgBC,GAAhB,CAAoBC,QAAQ,IAE3B;AAAI,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,QAAQ,CAACC,EAAG,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAcD,QAAQ,CAACE,IAAvB,CADF,CAFF,CAFD,CADH,CALF,CADF;;AAqBAT,IAAI,CAACU,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C,QAAM;AAAEH,IAAAA;AAAF,MAASG,OAAO,CAACC,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMjB,KAAK,CAAE,yCAAwCY,EAAG,EAA7C,CAAvB;AACA,QAAMN,IAAI,GAAG,MAAMW,GAAG,CAACC,IAAJ,EAAnB;AACA,QAAMC,IAAI,GAAG,MAAMnB,KAAK,CAACM,IAAI,CAACG,SAAN,CAAxB;AACA,QAAMA,SAAS,GAAG,MAAMU,IAAI,CAACD,IAAL,EAAxB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,IAAN,CAAW,KAAX,CAAZ;AAEA,MAAIC,cAAc,GAAGf,SAAS,CAACC,GAAV,CAAce,IAAI,IAAIA,IAAI,CAACZ,IAA3B,CAArB,CAR6C,CAS7C;;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYG,cAAZ;AAEA,SAAO;AAAElB,IAAAA,IAAF;AAAOG,IAAAA,SAAP;AAAiBe,IAAAA;AAAjB,GAAP;AACD,CAbD;;AAeA,eAAepB,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport Search from '../../components/Search';\n\nconst locations1 = [\n  \"S\",\n  \"Ams\",\n  \"Gro\",\n  \"F\",\n  \"T\",\n  \"Lixe\",\n  \"San\",\n  \"Amstel\"\n];\n//console.log(props.locations.name);\n\nconst Film = props => (\n  <Layout>\n    <h1>{props.film.title}</h1>\n    <p>{props.film.description}</p>\n    <Search locations={locations1}/>\n    <h1>LOCATIONS</h1>\n    <ul>\n      {props.locations.map(location=> (\n\n        <li key={location.id}>\n        \n          <Link href=\"/l/[id]\" as={`/l/${location.id}`}>\n            <a>Location: {location.name}</a>\n          </Link>\n        </li>\n        \n      ))}\n    </ul>\n  </Layout>\n);\n\nFilm.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://ghibliapi.herokuapp.com/films/${id}`);\n  const film = await res.json();\n  const res2 = await fetch(film.locations);\n  const locations = await res2.json();\n  console.log(Array.from('foo'));\n  \n  let locationsNames = locations.map(item => item.name);\n  //console.log(`Fetched show: ${film.people}`);\n  console.log(locationsNames)\n\n  return { film,locations,locationsNames };\n};\n\nexport default Film;"]},"metadata":{},"sourceType":"module"}