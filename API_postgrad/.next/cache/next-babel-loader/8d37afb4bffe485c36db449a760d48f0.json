{"ast":null,"code":"var _jsxFileName = \"/Users/hackyourfuture/Desktop/POST_GRAD/API_postgrad/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport Search from '../../components/Search';\nimport { Card } from 'semantic-ui-react';\n\nconst Film = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, __jsx(Card, {\n  size: \"big\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, __jsx(Card.Content, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, __jsx(Card.Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}, props.film.title), __jsx(Card.Meta, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, __jsx(\"span\", {\n  className: \"date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, props.film.producer)), __jsx(Card.Description, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }\n}, props.film.description))), __jsx(Search, {\n  locations: props.locationsNames,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}), __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, \"LOCATIONS\"), __jsx(Card.Group, {\n  stackable: true,\n  itemsPerRow: \"8\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, props.locations.map(location => __jsx(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }\n}, __jsx(Card.Content, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }\n}, __jsx(Link, {\n  href: \"/l/[id]\",\n  as: `/l/${location.id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }\n}, location.name)))))));\n\nFilm.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://ghibliapi.herokuapp.com/films/${id}`);\n  const film = await res.json();\n  console.log(film.locations);\n  const res2 = await fetch(film.locations);\n  const locations = await res2.json();\n  let locationsNames = locations.map(item => ({\n    id: item.id,\n    name: item.name\n  }));\n  return {\n    film,\n    locations,\n    locationsNames\n  };\n};\n\nexport default Film;","map":{"version":3,"sources":["/Users/hackyourfuture/Desktop/POST_GRAD/API_postgrad/pages/p/[id].js"],"names":["Layout","fetch","Link","Search","Card","Film","props","film","title","producer","description","locationsNames","locations","map","location","id","name","getInitialProps","context","query","res","json","console","log","res2","item"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,SAASC,IAAT,QAAqB,mBAArB;;AAGA,MAAMC,IAAI,GAAGC,KAAK,IAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAcA,KAAK,CAACC,IAAN,CAAWC,KAAzB,CADF,EAEE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAM,EAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwBF,KAAK,CAACC,IAAN,CAAWE,QAAnC,CADF,CAFF,EAKE,MAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACCH,KAAK,CAACC,IAAN,CAAWG,WADZ,CALF,CADA,CADF,EAaE,MAAC,MAAD;AAAQ,EAAA,SAAS,EAAEJ,KAAK,CAACK,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAbF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF,EAeE,MAAC,IAAD,CAAM,KAAN;AAAY,EAAA,SAAS,MAArB;AAAsB,EAAA,WAAW,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACIL,KAAK,CAACM,SAAN,CAAgBC,GAAhB,CAAoBC,QAAQ,IAC3B,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKA,QAAQ,CAACC,EAAG,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,QAAQ,CAACE,IAAb,CADH,CADA,CADA,CADD,CADJ,CAfF,CADF;;AA8BAX,IAAI,CAACY,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C,QAAM;AAAEH,IAAAA;AAAF,MAASG,OAAO,CAACC,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMnB,KAAK,CAAE,yCAAwCc,EAAG,EAA7C,CAAvB;AACA,QAAMR,IAAI,GAAG,MAAMa,GAAG,CAACC,IAAJ,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAI,CAACK,SAAjB;AACA,QAAMY,IAAI,GAAG,MAAMvB,KAAK,CAACM,IAAI,CAACK,SAAN,CAAxB;AACA,QAAMA,SAAS,GAAG,MAAMY,IAAI,CAACH,IAAL,EAAxB;AACA,MAAIV,cAAc,GAAGC,SAAS,CAACC,GAAV,CAAcY,IAAI,KAAI;AAAEV,IAAAA,EAAE,EAAEU,IAAI,CAACV,EAAX;AAAeC,IAAAA,IAAI,EAAES,IAAI,CAACT;AAA1B,GAAJ,CAAlB,CAArB;AAGA,SAAO;AAAET,IAAAA,IAAF;AAAOK,IAAAA,SAAP;AAAiBD,IAAAA;AAAjB,GAAP;AACD,CAXD;;AAaA,eAAeN,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport Search from '../../components/Search';\n\nimport { Card } from 'semantic-ui-react'\n\n\nconst Film = props => (\n  <Layout>\n    <Card size='big'>\n    <Card.Content>\n      <Card.Header>{props.film.title}</Card.Header>\n      <Card.Meta>\n        <span className='date'>{props.film.producer}</span>\n      </Card.Meta>\n      <Card.Description>\n      {props.film.description}\n      </Card.Description>\n    </Card.Content>\n  </Card>\n\n    <Search locations={props.locationsNames}/>\n    <h1>LOCATIONS</h1>\n    <Card.Group stackable itemsPerRow='8' >\n       {props.locations.map(location=>(\n         <Card>\n         <Card.Content>\n         <Link href=\"/l/[id]\" as={`/l/${location.id}`}>\n            <a>{location.name}</a>\n          </Link>\n         </Card.Content>\n       </Card>\n       ))} \n     </Card.Group>\n  </Layout>\n);\n\nFilm.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://ghibliapi.herokuapp.com/films/${id}`);\n  const film = await res.json();\n  console.log(film.locations);\n  const res2 = await fetch(film.locations);\n  const locations = await res2.json();\n  let locationsNames = locations.map(item =>({ id: item.id, name: item.name }))\n\n\n  return { film,locations,locationsNames };\n};\n\nexport default Film;"]},"metadata":{},"sourceType":"module"}