{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hackyourfuture/Desktop/next-learn-demo/6-fetching-data/pages/p/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport Search from '../../components/Search';\nvar locations1 = [\"S\", \"Ams\", \"Gro\", \"F\", \"T\", \"Lixe\", \"San\", \"Amstel\"]; //console.log(props.locations.name);\n\nvar Film = function Film(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, props.film.title), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, props.film.description), __jsx(Search, {\n    locations: props.locationsNames,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, \"LOCATIONS\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, props.locations.map(function (location) {\n    return __jsx(\"li\", {\n      key: location.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/l/[id]\",\n      as: \"/l/\".concat(location.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"Location: \", location.name)));\n  })));\n};\n\nFilm.getInitialProps = function _callee(context) {\n  var id, res, film, res2, locations, locationsNames;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://ghibliapi.herokuapp.com/films/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          film = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(fetch(film.locations));\n\n        case 9:\n          res2 = _context.sent;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(res2.json());\n\n        case 12:\n          locations = _context.sent;\n          console.log(Array.from('foo'));\n          locationsNames = locations.map(function (item) {\n            return item.name;\n          }); //console.log(`Fetched show: ${film.people}`);\n\n          console.log(locationsNames);\n          return _context.abrupt(\"return\", {\n            film: film,\n            locations: locations,\n            locationsNames: locationsNames\n          });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Film;","map":{"version":3,"sources":["/Users/hackyourfuture/Desktop/next-learn-demo/6-fetching-data/pages/p/[id].js"],"names":["Layout","fetch","Link","Search","locations1","Film","props","film","title","description","locationsNames","locations","map","location","id","name","getInitialProps","context","query","res","json","res2","console","log","Array","from","item"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,IAAMC,UAAU,GAAG,CACjB,GADiB,EAEjB,KAFiB,EAGjB,KAHiB,EAIjB,GAJiB,EAKjB,GALiB,EAMjB,MANiB,EAOjB,KAPiB,EAQjB,QARiB,CAAnB,C,CAUA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,KAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,WAAf,CAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEH,KAAK,CAACI,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACK,SAAN,CAAgBC,GAAhB,CAAoB,UAAAC,QAAQ;AAAA,WAE3B;AAAI,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,QAAQ,CAACC,EAAjB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAcD,QAAQ,CAACE,IAAvB,CADF,CAFF,CAF2B;AAAA,GAA5B,CADH,CALF,CADgB;AAAA,CAAlB;;AAqBAV,IAAI,CAACW,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbH,UAAAA,EADa,GACNG,OAAO,CAACC,KADF,CACbJ,EADa;AAAA;AAAA,2CAEHb,KAAK,iDAA0Ca,EAA1C,EAFF;;AAAA;AAEfK,UAAAA,GAFe;AAAA;AAAA,2CAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfb,UAAAA,IAHe;AAAA;AAAA,2CAIFN,KAAK,CAACM,IAAI,CAACI,SAAN,CAJH;;AAAA;AAIfU,UAAAA,IAJe;AAAA;AAAA,2CAKGA,IAAI,CAACD,IAAL,EALH;;AAAA;AAKfT,UAAAA,SALe;AAMrBW,UAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,IAAN,CAAW,KAAX,CAAZ;AAEIf,UAAAA,cARiB,GAQAC,SAAS,CAACC,GAAV,CAAc,UAAAc,IAAI;AAAA,mBAAIA,IAAI,CAACX,IAAT;AAAA,WAAlB,CARA,EASrB;;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAYb,cAAZ;AAVqB,2CAYd;AAAEH,YAAAA,IAAI,EAAJA,IAAF;AAAOI,YAAAA,SAAS,EAATA,SAAP;AAAiBD,YAAAA,cAAc,EAAdA;AAAjB,WAZc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAeA,eAAeL,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport Search from '../../components/Search';\n\nconst locations1 = [\n  \"S\",\n  \"Ams\",\n  \"Gro\",\n  \"F\",\n  \"T\",\n  \"Lixe\",\n  \"San\",\n  \"Amstel\"\n];\n//console.log(props.locations.name);\n\nconst Film = props => (\n  <Layout>\n    <h1>{props.film.title}</h1>\n    <p>{props.film.description}</p>\n    <Search locations={props.locationsNames}/>\n    <h1>LOCATIONS</h1>\n    <ul>\n      {props.locations.map(location=> (\n\n        <li key={location.id}>\n        \n          <Link href=\"/l/[id]\" as={`/l/${location.id}`}>\n            <a>Location: {location.name}</a>\n          </Link>\n        </li>\n        \n      ))}\n    </ul>\n  </Layout>\n);\n\nFilm.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://ghibliapi.herokuapp.com/films/${id}`);\n  const film = await res.json();\n  const res2 = await fetch(film.locations);\n  const locations = await res2.json();\n  console.log(Array.from('foo'));\n  \n  let locationsNames = locations.map(item => item.name);\n  //console.log(`Fetched show: ${film.people}`);\n  console.log(locationsNames)\n\n  return { film,locations,locationsNames };\n};\n\nexport default Film;"]},"metadata":{},"sourceType":"module"}