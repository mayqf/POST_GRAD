{"ast":null,"code":"var _jsxFileName = \"/Users/hackyourfuture/Desktop/API_postgrad/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport Search from '../../components/Search';\nimport { Card } from 'semantic-ui-react';\n\nconst Film = props => {\n  console.log(\"props:\", props);\n\n  __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, props.film.title), __jsx(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, props.film.producer)), __jsx(Card.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, props.film.description))), __jsx(Search, {\n    locations: props.locationsNames,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"LOCATIONS\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, props.locations.map(location => __jsx(\"li\", {\n    key: location.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/l/[id]\",\n    as: `/l/${location.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, location.name))))));\n};\n\nFilm.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://ghibliapi.herokuapp.com/films/${id}`);\n  const film = await res.json();\n  console.log(film.locations);\n  const res2 = await fetch(film.locations);\n  const locations = await res2.json();\n  let locationsNames = locations.map(item => ({\n    id: item.id,\n    name: item.name\n  }));\n  return {\n    film,\n    locations,\n    locationsNames\n  };\n};\n\nexport default Film;","map":{"version":3,"sources":["/Users/hackyourfuture/Desktop/API_postgrad/pages/p/[id].js"],"names":["Layout","fetch","Link","Search","Card","Film","props","console","log","film","title","producer","description","locationsNames","locations","map","location","id","name","getInitialProps","context","query","res","json","res2","item"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,SAASC,IAAT,QAAqB,mBAArB;;AAGA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,KAArB;;AACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,KAAK,CAACG,IAAN,CAAWC,KAAzB,CADF,EAEE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBJ,KAAK,CAACG,IAAN,CAAWE,QAAnC,CADF,CAFF,EAKE,MAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,KAAK,CAACG,IAAN,CAAWG,WADZ,CALF,CADA,CADF,EAYE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEN,KAAK,CAACO,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACQ,SAAN,CAAgBC,GAAhB,CAAoBC,QAAQ,IAE3B;AAAI,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,EAAG,MAAKD,QAAQ,CAACC,EAAG,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,QAAQ,CAACE,IAAb,CADF,CAFF,CAFD,CADH,CAdF;AA2BD,CA7BD;;AA+BAb,IAAI,CAACc,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C,QAAM;AAAEH,IAAAA;AAAF,MAASG,OAAO,CAACC,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMrB,KAAK,CAAE,yCAAwCgB,EAAG,EAA7C,CAAvB;AACA,QAAMR,IAAI,GAAG,MAAMa,GAAG,CAACC,IAAJ,EAAnB;AACAhB,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACK,SAAjB;AACA,QAAMU,IAAI,GAAG,MAAMvB,KAAK,CAACQ,IAAI,CAACK,SAAN,CAAxB;AACA,QAAMA,SAAS,GAAG,MAAMU,IAAI,CAACD,IAAL,EAAxB;AACA,MAAIV,cAAc,GAAGC,SAAS,CAACC,GAAV,CAAcU,IAAI,KAAI;AAAER,IAAAA,EAAE,EAAEQ,IAAI,CAACR,EAAX;AAAeC,IAAAA,IAAI,EAAEO,IAAI,CAACP;AAA1B,GAAJ,CAAlB,CAArB;AAGA,SAAO;AAAET,IAAAA,IAAF;AAAOK,IAAAA,SAAP;AAAiBD,IAAAA;AAAjB,GAAP;AACD,CAXD;;AAaA,eAAeR,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport Search from '../../components/Search';\n\nimport { Card } from 'semantic-ui-react'\n\n\nconst Film = props => {\n  console.log(\"props:\",props);\n  <Layout>\n    <Card>\n    <Card.Content>\n      <Card.Header>{props.film.title}</Card.Header>\n      <Card.Meta>\n        <span className='date'>{props.film.producer}</span>\n      </Card.Meta>\n      <Card.Description>\n      {props.film.description}\n      </Card.Description>\n    </Card.Content>\n  </Card>\n    <Search locations={props.locationsNames}/>\n    <h1>LOCATIONS</h1>\n    <ul>\n      {props.locations.map(location=> (\n\n        <li key={location.id}>\n        \n          <Link href=\"/l/[id]\" as={`/l/${location.id}`}>\n            <a>{location.name}</a>\n          </Link>\n        </li>\n        \n      ))}\n    </ul> \n  </Layout>\n};\n\nFilm.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://ghibliapi.herokuapp.com/films/${id}`);\n  const film = await res.json();\n  console.log(film.locations);\n  const res2 = await fetch(film.locations);\n  const locations = await res2.json();\n  let locationsNames = locations.map(item =>({ id: item.id, name: item.name }))\n\n\n  return { film,locations,locationsNames };\n};\n\nexport default Film;"]},"metadata":{},"sourceType":"module"}