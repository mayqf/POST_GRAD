{"ast":null,"code":"var _jsxFileName = \"/Users/hackyourfuture/Desktop/6-fetching-data/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport Search from '../../components/Search';\nimport { Card, Icon, Image } from 'semantic-ui-react';\n\nconst Film = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, __jsx(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, __jsx(Image, {\n  src: \"/images/avatar/large/matthew.png\",\n  wrapped: true,\n  ui: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}), __jsx(Card.Content, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, __jsx(Card.Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}, \"Matthew\"), __jsx(Card.Meta, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }\n}, __jsx(\"span\", {\n  className: \"date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }\n}, \"Joined in 2015\")), __jsx(Card.Description, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }\n}, \"Matthew is a musician living in Nashville.\")), __jsx(Card.Content, {\n  extra: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n}, __jsx(Icon, {\n  name: \"user\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }\n}), \"22 Friends\"))));\n\nFilm.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://ghibliapi.herokuapp.com/films/${id}`);\n  const film = await res.json();\n  console.log(film.locations);\n  const res2 = await fetch(film.locations);\n  console.log(res2);\n  const locations = await res2.json(); //let locationsNames = locations.map(item => item.name);\n\n  let locationsNames = locations.map(item => ({\n    id: item.id,\n    name: item.name\n  })); //console.log(`Fetched show: ${film.people}`);\n\n  console.log(locationsNames);\n  return {\n    film,\n    locations,\n    locationsNames\n  };\n};\n\nexport default Film;","map":{"version":3,"sources":["/Users/hackyourfuture/Desktop/6-fetching-data/pages/p/[id].js"],"names":["Layout","fetch","Link","Search","Card","Icon","Image","Film","props","getInitialProps","context","id","query","res","film","json","console","log","locations","res2","locationsNames","map","item","name"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAGA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,mBAAlC;;AAGA,MAAMC,IAAI,GAAGC,KAAK,IAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,MAAC,KAAD;AAAO,EAAA,GAAG,EAAC,kCAAX;AAA8C,EAAA,OAAO,MAArD;AAAsD,EAAA,EAAE,EAAE,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,EAEA,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAM,EAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAFF,EAKE,MAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDALF,CAFA,EAWA,MAAC,IAAD,CAAM,OAAN;AAAc,EAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eADF,CAXA,CADF,CADF;;AAuCAD,IAAI,CAACE,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAE,yCAAwCU,EAAG,EAA7C,CAAvB;AACA,QAAMG,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,SAAjB;AACA,QAAMC,IAAI,GAAG,MAAMlB,KAAK,CAACa,IAAI,CAACI,SAAN,CAAxB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACA,QAAMD,SAAS,GAAG,MAAMC,IAAI,CAACJ,IAAL,EAAxB,CAP6C,CAS7C;;AACA,MAAIK,cAAc,GAAGF,SAAS,CAACG,GAAV,CAAcC,IAAI,KAAI;AAAEX,IAAAA,EAAE,EAAEW,IAAI,CAACX,EAAX;AAAeY,IAAAA,IAAI,EAAED,IAAI,CAACC;AAA1B,GAAJ,CAAlB,CAArB,CAV6C,CAW7C;;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYG,cAAZ;AAEA,SAAO;AAAEN,IAAAA,IAAF;AAAOI,IAAAA,SAAP;AAAiBE,IAAAA;AAAjB,GAAP;AACD,CAfD;;AAiBA,eAAeb,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport Search from '../../components/Search';\n\n\nimport { Card, Icon, Image } from 'semantic-ui-react'\n\n\nconst Film = props => (\n  <Layout>\n    <Card>\n    <Image src='/images/avatar/large/matthew.png' wrapped ui={false} />\n    <Card.Content>\n      <Card.Header>Matthew</Card.Header>\n      <Card.Meta>\n        <span className='date'>Joined in 2015</span>\n      </Card.Meta>\n      <Card.Description>\n        Matthew is a musician living in Nashville.\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n      <a>\n        <Icon name='user' />\n        22 Friends\n      </a>\n    </Card.Content>\n  </Card>\n    {/* <h1>{props.film.title}</h1>\n    <p>{props.film.description}</p>\n    <Search locations={props.locationsNames}/>\n    <h1>LOCATIONS</h1>\n    <ul>\n      {props.locations.map(location=> (\n\n        <li key={location.id}>\n        \n          <Link href=\"/l/[id]\" as={`/l/${location.id}`}>\n            <a>{location.name}</a>\n          </Link>\n        </li>\n        \n      ))}\n    </ul> */}\n  </Layout>\n);\n\nFilm.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://ghibliapi.herokuapp.com/films/${id}`);\n  const film = await res.json();\n  console.log(film.locations);\n  const res2 = await fetch(film.locations);\n  console.log(res2);\n  const locations = await res2.json();\n  \n  //let locationsNames = locations.map(item => item.name);\n  let locationsNames = locations.map(item =>({ id: item.id, name: item.name }))\n  //console.log(`Fetched show: ${film.people}`);\n  console.log(locationsNames)\n\n  return { film,locations,locationsNames };\n};\n\nexport default Film;"]},"metadata":{},"sourceType":"module"}