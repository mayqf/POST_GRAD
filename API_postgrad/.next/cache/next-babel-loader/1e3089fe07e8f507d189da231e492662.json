{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hackyourfuture/Desktop/next-learn-demo/6-fetching-data/pages/p/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Film = function Film(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, props.film.title), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, props.film.description));\n};\n\nFilm.getInitialProps = function _callee(context) {\n  var id, res, film_, res2, people;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://ghibliapi.herokuapp.com/films/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          film_ = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(fetch(film.people));\n\n        case 9:\n          res2 = _context.sent;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(res2.json());\n\n        case 12:\n          people = _context.sent;\n          console.log(people); //console.log(`Fetched show: ${film.people}`);\n\n          return _context.abrupt(\"return\", {\n            film: film_\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Film;","map":{"version":3,"sources":["/Users/hackyourfuture/Desktop/next-learn-demo/6-fetching-data/pages/p/[id].js"],"names":["Layout","fetch","Film","props","film","title","description","getInitialProps","context","id","query","res","json","film_","people","res2","console","log"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,KAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,WAAf,CAFF,CADgB;AAAA,CAAlB;;AAOAJ,IAAI,CAACK,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAAA;AAAA,2CAEHR,KAAK,iDAA0CQ,EAA1C,EAFF;;AAAA;AAEfE,UAAAA,GAFe;AAAA;AAAA,2CAGDA,GAAG,CAACC,IAAJ,EAHC;;AAAA;AAGfC,UAAAA,KAHe;AAAA;AAAA,2CAIFZ,KAAK,CAACG,IAAI,CAACU,MAAN,CAJH;;AAAA;AAIfC,UAAAA,IAJe;AAAA;AAAA,2CAKAA,IAAI,CAACH,IAAL,EALA;;AAAA;AAKfE,UAAAA,MALe;AAOrBE,UAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAPqB,CAQrB;;AARqB,2CAUd;AAAEV,YAAAA,IAAI,EAAGS;AAAT,WAVc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAeA,eAAeX,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Film = props => (\n  <Layout>\n    <h1>{props.film.title}</h1>\n    <p>{props.film.description}</p>\n  </Layout>\n);\n\nFilm.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://ghibliapi.herokuapp.com/films/${id}`);\n  const film_ = await res.json();\n  const res2 = await fetch(film.people);\n  const people = await res2.json();\n  \n  console.log(people);\n  //console.log(`Fetched show: ${film.people}`);\n\n  return { film : film_\n      \n  };\n};\n\nexport default Film;"]},"metadata":{},"sourceType":"module"}