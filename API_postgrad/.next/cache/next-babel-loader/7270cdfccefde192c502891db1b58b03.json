{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hackyourfuture/Desktop/POST_GRAD/API_postgrad/pages/l/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport { Card } from 'semantic-ui-react';\n\nvar Film = function Film(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, __jsx(Card, {\n    size: \"big\",\n    color: \"blue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"LOCATION DETAILS\"), __jsx(Card.Description, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"Climate : \", props.location.climate), __jsx(Card.Description, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Terrain : \", props.location.terrain), __jsx(Card.Description, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Surface Water  : \", props.location.surface_water))));\n};\n\nFilm.getInitialProps = function _callee(context) {\n  var id, res, location;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://ghibliapi.herokuapp.com/locations/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          location = _context.sent;\n          return _context.abrupt(\"return\", {\n            location: location\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Film;","map":{"version":3,"sources":["/Users/hackyourfuture/Desktop/POST_GRAD/API_postgrad/pages/l/[id].js"],"names":["Layout","fetch","Card","Film","props","location","climate","terrain","surface_water","getInitialProps","context","id","query","res","json"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,IAAT,QAAoB,mBAApB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,IAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,MAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWA,KAAK,CAACC,QAAN,CAAeC,OAD1B,CAFF,EAKE,MAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWF,KAAK,CAACC,QAAN,CAAeE,OAD1B,CALF,EAQE,MAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkBH,KAAK,CAACC,QAAN,CAAeG,aADjC,CARF,CADA,CADF,CADgB;AAAA,CAAlB;;AAmBAL,IAAI,CAACM,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAAA;AAAA,2CAEHV,KAAK,qDAA8CU,EAA9C,EAFF;;AAAA;AAEfE,UAAAA,GAFe;AAAA;AAAA,2CAGEA,GAAG,CAACC,IAAJ,EAHF;;AAAA;AAGfT,UAAAA,QAHe;AAAA,2CAMd;AAAEA,YAAAA,QAAQ,EAARA;AAAF,WANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AASA,eAAeF,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport { Card} from 'semantic-ui-react'\n\nconst Film = props => (\n  <Layout>\n    <Card size='big' color='blue' >\n    <Card.Content>\n      <Card.Header>LOCATION DETAILS</Card.Header>\n      <Card.Description>\n      Climate : {props.location.climate}\n      </Card.Description>\n      <Card.Description>\n      Terrain : {props.location.terrain}\n      </Card.Description>\n      <Card.Description>\n      Surface Water  : {props.location.surface_water}\n      </Card.Description>\n    </Card.Content>\n  </Card>\n  </Layout>\n);\n\nFilm.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://ghibliapi.herokuapp.com/locations/${id}`);\n  const location = await res.json();\n  \n\n  return { location};\n};\n\nexport default Film;"]},"metadata":{},"sourceType":"module"}