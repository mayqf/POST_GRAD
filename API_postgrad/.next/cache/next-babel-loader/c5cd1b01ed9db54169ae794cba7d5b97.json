{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hackyourfuture/Desktop/next-learn-demo/6-fetching-data/components/Search.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nvar locations = [];\nexport default function Search(props) {\n  var _this = this;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchTerm = _React$useState2[0],\n      setSearchTerm = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      searchResults = _React$useState4[0],\n      setSearchResults = _React$useState4[1];\n\n  var handleChange = function handleChange(e) {\n    setSearchTerm(e.target.value);\n  };\n\n  React.useEffect(function () {\n    var results = props.locations.filter(function (location) {\n      return location.toLowerCase().includes(searchTerm);\n    });\n    setSearchResults(results);\n  }, [searchTerm]);\n  console.log(searchResults);\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Search locations...\",\n    value: searchTerm,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), searchTerm, \" ?\", __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 8\n    }\n  }, searchResults.map(function (item) {\n    return __jsx(\"li\", {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, item);\n  })));\n}","map":{"version":3,"sources":["/Users/hackyourfuture/Desktop/next-learn-demo/6-fetching-data/components/Search.js"],"names":["React","locations","Search","props","useState","searchTerm","setSearchTerm","searchResults","setSearchResults","handleChange","e","target","value","useEffect","results","filter","location","toLowerCase","includes","console","log","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,SAAS,GAAG,EAAlB;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAAA,wBACAH,KAAK,CAACI,QAAN,CAAe,EAAf,CADA;AAAA;AAAA,MAC7BC,UAD6B;AAAA,MACjBC,aADiB;;AAAA,yBAEMN,KAAK,CAACI,QAAN,CAAe,EAAf,CAFN;AAAA;AAAA,MAE7BG,aAF6B;AAAA,MAEdC,gBAFc;;AAGpC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACxBJ,IAAAA,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFD;;AAGAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAM;AACpB,QAAMC,OAAO,GAAGX,KAAK,CAACF,SAAN,CAAgBc,MAAhB,CAAuB,UAAAC,QAAQ;AAAA,aAC7CA,QAAQ,CAACC,WAAT,GAAuBC,QAAvB,CAAgCb,UAAhC,CAD6C;AAAA,KAA/B,CAAhB;AAGAG,IAAAA,gBAAgB,CAACM,OAAD,CAAhB;AACD,GALD,EAKG,CAACT,UAAD,CALH;AAMAc,EAAAA,OAAO,CAACC,GAAR,CAAYb,aAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,qBAFd;AAGE,IAAA,KAAK,EAAEF,UAHT;AAIE,IAAA,QAAQ,EAAEI,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGJ,UAPH,QAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,aAAa,CAACc,GAAd,CAAkB,UAAAC,IAAI;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAnB,CADoB;AAAA,GAAtB,CADD,CARH,CADF;AAgBD","sourcesContent":["import React from \"react\";\n\nconst locations = [\n];\nexport default function Search(props) {\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n  const handleChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  React.useEffect(() => {\n    const results = props.locations.filter(location =>\n      location.toLowerCase().includes(searchTerm)\n    );\n    setSearchResults(results);\n  }, [searchTerm]);\n  console.log(searchResults);\n  return (\n    <div className=\"App\">\n      <input\n        type=\"text\"\n        placeholder=\"Search locations...\"\n        value={searchTerm}\n        onChange={handleChange}\n      />\n      {searchTerm} ?\n      {<ul>\n       {searchResults.map(item => (\n          <li key={item.id}>{item}</li>\n        ))} \n      </ul>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}