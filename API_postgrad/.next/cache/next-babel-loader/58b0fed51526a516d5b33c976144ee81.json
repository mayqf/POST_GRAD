{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hackyourfuture/Desktop/next-learn-demo/6-fetching-data/pages/p/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Film = function Film(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, props.film.title), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, props.film.description), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, \"PEOPLE\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, props.actors.map(function (actor) {\n    return __jsx(\"li\", {\n      key: actor.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, actor.title));\n  })));\n};\n\nFilm.getInitialProps = function _callee(context) {\n  var id, res, film, res2, actors;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://ghibliapi.herokuapp.com/films/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          film = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(fetch(film.people));\n\n        case 9:\n          res2 = _context.sent;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(res2.json());\n\n        case 12:\n          actors = _context.sent;\n          console.log(film2); //console.log(`Fetched show: ${film.people}`);\n\n          return _context.abrupt(\"return\", {\n            film: film,\n            actors: actors\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Film;","map":{"version":3,"sources":["/Users/hackyourfuture/Desktop/next-learn-demo/6-fetching-data/pages/p/[id].js"],"names":["Layout","fetch","Film","props","film","title","description","actors","map","actor","id","getInitialProps","context","query","res","json","people","res2","console","log","film2"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,KAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,WAAf,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WAErB;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACJ,KAAX,CADF,CAFqB;AAAA,GAAtB,CADH,CAJF,CADgB;AAAA,CAAlB;;AAkBAH,IAAI,CAACS,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbF,UAAAA,EADa,GACNE,OAAO,CAACC,KADF,CACbH,EADa;AAAA;AAAA,2CAEHT,KAAK,iDAA0CS,EAA1C,EAFF;;AAAA;AAEfI,UAAAA,GAFe;AAAA;AAAA,2CAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfX,UAAAA,IAHe;AAAA;AAAA,2CAIFH,KAAK,CAACG,IAAI,CAACY,MAAN,CAJH;;AAAA;AAIfC,UAAAA,IAJe;AAAA;AAAA,2CAKAA,IAAI,CAACF,IAAL,EALA;;AAAA;AAKfR,UAAAA,MALe;AAOrBW,UAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EAPqB,CAQrB;;AARqB,2CAUd;AAAEhB,YAAAA,IAAI,EAAJA,IAAF;AAAOG,YAAAA,MAAM,EAANA;AAAP,WAVc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAaA,eAAeL,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Film = props => (\n  <Layout>\n    <h1>{props.film.title}</h1>\n    <p>{props.film.description}</p>\n    <h1>PEOPLE</h1>\n    <ul>\n      {props.actors.map(actor=> (\n\n        <li key={actor.id}>\n          <h2>{actor.title}</h2>\n          \n        </li>\n        \n      ))}\n    </ul>\n  </Layout>\n);\n\nFilm.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`https://ghibliapi.herokuapp.com/films/${id}`);\n  const film = await res.json();\n  const res2 = await fetch(film.people);\n  const actors = await res2.json();\n  \n  console.log(film2);\n  //console.log(`Fetched show: ${film.people}`);\n\n  return { film,actors };\n};\n\nexport default Film;"]},"metadata":{},"sourceType":"module"}